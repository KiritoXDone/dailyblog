<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>补题 on KiritoXD&#39;s Blog</title>
    <link>https://KiritoXDone.github.io/tags/%E8%A1%A5%E9%A2%98/</link>
    <description>Recent content in 补题 on KiritoXD&#39;s Blog</description>
    <generator>Hugo -- 0.129.0</generator>
    <language>zh</language>
    <lastBuildDate>Sun, 28 Jul 2024 15:36:08 +0800</lastBuildDate>
    <atom:link href="https://KiritoXDone.github.io/tags/%E8%A1%A5%E9%A2%98/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>2024萌新联赛1</title>
      <link>https://KiritoXDone.github.io/posts/study/2024%E8%90%8C%E6%96%B0%E8%81%94%E8%B5%9B1/</link>
      <pubDate>Sun, 28 Jul 2024 15:36:08 +0800</pubDate>
      <guid>https://KiritoXDone.github.io/posts/study/2024%E8%90%8C%E6%96%B0%E8%81%94%E8%B5%9B1/</guid>
      <description>2024 河南萌新联赛 1 A 造数 给定整数 n，操作 1：+1，操作 2：+2，操作 3：x2，多少次将 0 转化到 n 逆向思维，把 n 化为 0 即可 #include &amp;lt;bits/stdc++.h&amp;gt; using namespace std; int main(){ int n,cnt=0; cin&amp;gt;&amp;gt;n; while(n){ if(n&amp;amp;1)n--,cnt++; else if(n&amp;gt;2)cnt++,n/=2; else cnt++,n-=2; } cout&amp;lt;&amp;lt;cnt&amp;lt;&amp;lt;endl; } H 两难抉择 长度为 n 的数组 a，两种操作选一个进行一次或不操。 显然将数组最大值 * n 后答案最大 #include &amp;lt;bits/stdc++.h&amp;gt; using namespace std; #define int long long signed main(){ int n; cin&amp;gt;&amp;gt;n; vector&amp;lt;int&amp;gt;a(n); for(int i=0;i&amp;lt;n;i++)cin&amp;gt;&amp;gt;a[i]; sort(a.begin(),a.end());</description>
    </item>
    <item>
      <title>CF962</title>
      <link>https://KiritoXDone.github.io/posts/study/cf962/</link>
      <pubDate>Sat, 27 Jul 2024 18:28:37 +0800</pubDate>
      <guid>https://KiritoXDone.github.io/posts/study/cf962/</guid>
      <description>Codeforces Round 962 还得练 A Legs 先除 4 再除 2 #include &amp;lt;bits/stdc++.h&amp;gt; using namespace std; void solve(){ int n; cin&amp;gt;&amp;gt;n; int cnt=n/4; if(n%4!=0)cnt++; cout&amp;lt;&amp;lt;cnt&amp;lt;&amp;lt;endl; } int main(){ int t; cin&amp;gt;&amp;gt;t; while(t--)solve(); return 0; } B Scale 按题意合理间隔输出即可 #include &amp;lt;bits/stdc++.h&amp;gt; using namespace std; const int N =1010; char mp[N][N]; void solve(){ int n,k; cin&amp;gt;&amp;gt;n&amp;gt;&amp;gt;k; for(int i=1;i&amp;lt;=n;i++) for(int j=1;j&amp;lt;=n;j++)cin&amp;gt;&amp;gt;mp[i][j]; for(int i=1;i&amp;lt;=n;i+=k){ for(int j=1;j&amp;lt;=n;j+=k) cout&amp;lt;&amp;lt;mp[i][j]; cout&amp;lt;&amp;lt;endl; } } int main(){ int t; cin&amp;gt;&amp;gt;t; while(t--)solve(); return 0; } C Sort 对 a 到 z 这 26 个字符分别开前缀和，统计 l 到 r 之间他们不同的数量，更改差异数量除 2 (向上取整)，即可 #include &amp;lt;bits/stdc++.h&amp;gt;</description>
    </item>
    <item>
      <title>2024萌新联赛2</title>
      <link>https://KiritoXDone.github.io/posts/study/2024%E8%90%8C%E6%96%B0%E8%81%94%E8%B5%9B2/</link>
      <pubDate>Thu, 25 Jul 2024 20:50:08 +0800</pubDate>
      <guid>https://KiritoXDone.github.io/posts/study/2024%E8%90%8C%E6%96%B0%E8%81%94%E8%B5%9B2/</guid>
      <description>2024 河南萌新联赛 2 状态 + 狗运+ py 大法，目前最好的一把 I 重生之zbk要拿回属于他的一切 签到，暴力找 chuan 的数量即可 #include &amp;lt;bits/stdc++.h&amp;gt; using namespace std; int main() { int n; cin &amp;gt;&amp;gt; n; string s; cin &amp;gt;&amp;gt; s; int pos = s.find(&amp;#34;chuan&amp;#34;), cnt = 0; while (pos != string::npos) { cnt++; pos = s.find(&amp;#34;chuan&amp;#34;, pos + 1); } cout &amp;lt;&amp;lt; cnt &amp;lt;&amp;lt; endl; return 0; } F 水灵灵的小学弟 观察题目，发现博弈双方名称相同，不管谁赢都一样，直接输出即可 #include &amp;lt;bits/stdc++.h&amp;gt; using</description>
    </item>
    <item>
      <title>2024HDU2</title>
      <link>https://KiritoXDone.github.io/posts/study/2024hdu2/</link>
      <pubDate>Tue, 23 Jul 2024 21:53:03 +0800</pubDate>
      <guid>https://KiritoXDone.github.io/posts/study/2024hdu2/</guid>
      <description>杭电多校 2 补题 1010 女神的睿智 按顺序合并 8 块碎片，如果两片相同，合成后仍相同，如不同，取左侧的，最后合成大碎片时，如果两片相同，不变，如果不同，取出现次数最多的，如果不确定，输出N。 签到，直接暴力 #include &amp;lt;bits/stdc++.h&amp;gt; using namespace std; void solve(){ string t,s; cin&amp;gt;&amp;gt;s; map&amp;lt;char,int&amp;gt;vis; for(int i=0;i&amp;lt;8;i++){ if(i%2!=1)t+=s[i]; vis[s[i]]++; } s=t; t=&amp;#34;&amp;#34;; for(int i=0;i&amp;lt;4;i++){ if(i%2!=1)t+=s[i]; } if(vis[t[0]]==vis[t[1]])cout&amp;lt;&amp;lt;&amp;#34;N&amp;#34;; else if(vis[t[0]]&amp;gt;vit[t[1]])cout&amp;lt;&amp;lt;t[0]; else cout&amp;lt;&amp;lt;t[1]; cout&amp;lt;&amp;lt;&amp;#34;\n&amp;#34;; } int main(){ int t=1; cin&amp;gt;&amp;gt;t; while(t--)solve(); return 0; } 1007 URL 划分 输入</description>
    </item>
  </channel>
</rss>
