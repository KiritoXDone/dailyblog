<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>KiritoXD&#39;s Blog</title>
    <link>https://KiritoXDone.github.io/</link>
    <description>Recent content on KiritoXD&#39;s Blog</description>
    <generator>Hugo -- 0.129.0</generator>
    <language>zh</language>
    <lastBuildDate>Tue, 30 Jul 2024 20:11:43 +0800</lastBuildDate>
    <atom:link href="https://KiritoXDone.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>最小生成树</title>
      <link>https://KiritoXDone.github.io/posts/study/%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91/</link>
      <pubDate>Tue, 30 Jul 2024 20:11:43 +0800</pubDate>
      <guid>https://KiritoXDone.github.io/posts/study/%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91/</guid>
      <description>最小生成树算法学习</description>
    </item>
    <item>
      <title>最短路</title>
      <link>https://KiritoXDone.github.io/posts/study/%E6%9C%80%E7%9F%AD%E8%B7%AF/</link>
      <pubDate>Mon, 29 Jul 2024 21:43:24 +0800</pubDate>
      <guid>https://KiritoXDone.github.io/posts/study/%E6%9C%80%E7%9F%AD%E8%B7%AF/</guid>
      <description>最短路学习记录</description>
    </item>
    <item>
      <title>2024萌新联赛1</title>
      <link>https://KiritoXDone.github.io/posts/study/2024%E8%90%8C%E6%96%B0%E8%81%94%E8%B5%9B1/</link>
      <pubDate>Sun, 28 Jul 2024 15:36:08 +0800</pubDate>
      <guid>https://KiritoXDone.github.io/posts/study/2024%E8%90%8C%E6%96%B0%E8%81%94%E8%B5%9B1/</guid>
      <description>萌新联赛补题</description>
    </item>
    <item>
      <title>CF962</title>
      <link>https://KiritoXDone.github.io/posts/study/cf962/</link>
      <pubDate>Sat, 27 Jul 2024 18:28:37 +0800</pubDate>
      <guid>https://KiritoXDone.github.io/posts/study/cf962/</guid>
      <description>Codeforces Round 962 还得练 A Legs 先除 4 再除 2 #include &amp;lt;bits/stdc++.h&amp;gt; using namespace std; void solve(){ int n; cin&amp;gt;&amp;gt;n; int cnt=n/4; if(n%4!=0)cnt++; cout&amp;lt;&amp;lt;cnt&amp;lt;&amp;lt;endl; } int main(){ int t; cin&amp;gt;&amp;gt;t; while(t--)solve(); return 0; } B Scale 按题意合理间隔输出即可 #include &amp;lt;bits/stdc++.h&amp;gt; using namespace std; const int N =1010; char mp[N][N]; void solve(){ int n,k; cin&amp;gt;&amp;gt;n&amp;gt;&amp;gt;k; for(int i=1;i&amp;lt;=n;i++) for(int j=1;j&amp;lt;=n;j++)cin&amp;gt;&amp;gt;mp[i][j]; for(int i=1;i&amp;lt;=n;i+=k){ for(int j=1;j&amp;lt;=n;j+=k) cout&amp;lt;&amp;lt;mp[i][j]; cout&amp;lt;&amp;lt;endl; } } int main(){ int t; cin&amp;gt;&amp;gt;t; while(t--)solve(); return 0; } C Sort 对 a 到 z 这 26 个字符分别开前缀和，统计 l 到 r 之间他们不同的数量，更改差异数量除 2 (向上取整)，即可 #include &amp;lt;bits/stdc++.h&amp;gt;</description>
    </item>
    <item>
      <title>博弈论</title>
      <link>https://KiritoXDone.github.io/posts/study/%E5%8D%9A%E5%BC%88%E8%AE%BA/</link>
      <pubDate>Fri, 26 Jul 2024 18:15:23 +0800</pubDate>
      <guid>https://KiritoXDone.github.io/posts/study/%E5%8D%9A%E5%BC%88%E8%AE%BA/</guid>
      <description>简单博弈论学习记录</description>
    </item>
    <item>
      <title>2024萌新联赛2</title>
      <link>https://KiritoXDone.github.io/posts/study/2024%E8%90%8C%E6%96%B0%E8%81%94%E8%B5%9B2/</link>
      <pubDate>Thu, 25 Jul 2024 20:50:08 +0800</pubDate>
      <guid>https://KiritoXDone.github.io/posts/study/2024%E8%90%8C%E6%96%B0%E8%81%94%E8%B5%9B2/</guid>
      <description>萌新联赛补题</description>
    </item>
    <item>
      <title>最小表示法</title>
      <link>https://KiritoXDone.github.io/posts/study/%E6%9C%80%E5%B0%8F%E8%A1%A8%E7%A4%BA%E6%B3%95/</link>
      <pubDate>Wed, 24 Jul 2024 21:53:28 +0800</pubDate>
      <guid>https://KiritoXDone.github.io/posts/study/%E6%9C%80%E5%B0%8F%E8%A1%A8%E7%A4%BA%E6%B3%95/</guid>
      <description>最小表示法学习记录</description>
    </item>
    <item>
      <title>2024HDU2</title>
      <link>https://KiritoXDone.github.io/posts/study/2024hdu2/</link>
      <pubDate>Tue, 23 Jul 2024 21:53:03 +0800</pubDate>
      <guid>https://KiritoXDone.github.io/posts/study/2024hdu2/</guid>
      <description>杭电多校 2 补题 1010 女神的睿智 按顺序合并 8 块碎片，如果两片相同，合成后仍相同，如不同，取左侧的，最后合成大碎片时，如果两片相同，不变，如果不同，取出现次数最多的，如果不确定，输出N。 签到，直接暴力 #include &amp;lt;bits/stdc++.h&amp;gt; using namespace std; void solve(){ string t,s; cin&amp;gt;&amp;gt;s; map&amp;lt;char,int&amp;gt;vis; for(int i=0;i&amp;lt;8;i++){ if(i%2!=1)t+=s[i]; vis[s[i]]++; } s=t; t=&amp;#34;&amp;#34;; for(int i=0;i&amp;lt;4;i++){ if(i%2!=1)t+=s[i]; } if(vis[t[0]]==vis[t[1]])cout&amp;lt;&amp;lt;&amp;#34;N&amp;#34;; else if(vis[t[0]]&amp;gt;vit[t[1]])cout&amp;lt;&amp;lt;t[0]; else cout&amp;lt;&amp;lt;t[1]; cout&amp;lt;&amp;lt;&amp;#34;\n&amp;#34;; } int main(){ int t=1; cin&amp;gt;&amp;gt;t; while(t--)solve(); return 0; } 1007 URL 划分 输入</description>
    </item>
    <item>
      <title>Manacher</title>
      <link>https://KiritoXDone.github.io/posts/study/manacher/</link>
      <pubDate>Mon, 22 Jul 2024 22:59:43 +0800</pubDate>
      <guid>https://KiritoXDone.github.io/posts/study/manacher/</guid>
      <description>Manacher 学习记录</description>
    </item>
    <item>
      <title>0721</title>
      <link>https://KiritoXDone.github.io/posts/study/0721/</link>
      <pubDate>Sun, 21 Jul 2024 16:09:03 +0800</pubDate>
      <guid>https://KiritoXDone.github.io/posts/study/0721/</guid>
      <description>学习记录</description>
    </item>
    <item>
      <title>KMP</title>
      <link>https://KiritoXDone.github.io/posts/study/kmp/</link>
      <pubDate>Sat, 20 Jul 2024 21:33:32 +0800</pubDate>
      <guid>https://KiritoXDone.github.io/posts/study/kmp/</guid>
      <description>KMP算法学习记录</description>
    </item>
    <item>
      <title>简单的排序</title>
      <link>https://KiritoXDone.github.io/posts/study/easy-sort/</link>
      <pubDate>Sat, 20 Jul 2024 12:16:26 +0800</pubDate>
      <guid>https://KiritoXDone.github.io/posts/study/easy-sort/</guid>
      <description>简单的排序实现 快速排序 快排 分治思想 复杂度 [nlogn, n^2] 不稳定 &amp;ndash;x随机取 排序区间为 [l, r] 时，长度小于 1，直接退出，否则选一个数字 x 作为比较元素 将大于 x 的放右边，小于 x 的放左边，等于 x 的随意放 确定 x 的位置后，对两侧继续递归 void quicksort(int l, int r) { if (l &amp;gt;= r) return; // 长度小于 1，直接退出 swap(a[l], a[l + rand() % (r - l +</description>
    </item>
  </channel>
</rss>
